@page "/document-types/create"
@page "/document-types/edit/{id:int}"
@using BlazorReRe.Shared.Model.DocumentTypes
@using BlazorReRe.Shared.Wrapper
@inject PublicClient Http
@inject NavigationManager NavigationManager
<h1>@title DocumentType</h1>
<hr />

<EditForm Model="@data" OnValidSubmit="Save">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="data.Name" />
        </div>
        <ValidationMessage For="@(() => data.Name)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="data.Description" />
        </div>
        <ValidationMessage For="@(() => data.Description)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int id { get; set; }
    protected string title = "Create";
    protected DocumentTypeDto data = new();

    protected override async Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            title = "Edit";
            var result = await Http.Client.GetFromJsonAsync<Result<DocumentTypeDto>>("api/DocumentTypes/" + id);
            data = result?.Data ?? new();
        }
    }

    // 登録または更新
    protected async Task Save()
    {
        await Http.Client.PostAsJsonAsync("api/DocumentTypes", data);
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/document-types");
    }
}

